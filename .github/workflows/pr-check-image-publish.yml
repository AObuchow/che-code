#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Publish Image PR check

on:
  workflow_run:
    workflows: ["Pull Request Check"]
    types:
      - completed

jobs:
  publish-image-pull-request:
    name: publish image from the pull request
    runs-on: ubuntu-20.04
    steps:
      - name: PR number
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          name: pull-request-number
      - name: Grab pull request number
        run: |
          pr_number=$(cat "PR_NUMBER")
          if ! [[ "$pr_number" =~ ^[0-9]+$ ]]; then
            echo "pr number invalid"
            exit 1
          fi
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
      - name: PR sha
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          name: pull-request-sha
      - name: Grab pull request sha1
        run: |
          pr_sha=$(cat "PR_SHA")
          echo "PR_SHA=$pr_sha" >> $GITHUB_ENV
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_PULL_REQUESTS_USERNAME }}
          password: ${{ secrets.QUAY_PULL_REQUESTS_PASSWORD }} 
      - name: Download assembly image
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          name: action_image_artifact_assembly-pr
          path: assembly-image/
      - name: Load docker image
        run: |
          ls -la assembly-image/
          docker load -i assembly-image/assembly-pr
      - name: Docker Push
        run: |
          export IMAGE_NAME=quay.io/che-incubator-pull-requests/che-code:pr-${{env.PR_SHA}}-amd64
          docker tag assembly-pr ${IMAGE_NAME}
          docker push ${IMAGE_NAME}
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
      - name: 'Comment PR'
        uses: actions/github-script@v3.0.0
        with:
         script: |
           const { repo: { owner, repo } } = context;
           await github.rest.issues.createComment({
              issue_number: process.env.PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Pull Request image published at ${process.env.IMAGE_NAME} âœ¨`
            })
